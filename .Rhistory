setwd("D:/BITS/svn")
setwd("D:/BITS/svn")
#library(psycho)
#library("PerformanceAnalytics")
library(corrplot)
library(tidyverse)
source("read_diab_file.r")
dat = read_diab_file()
display(dat.info(),dat.head())
correlations = cor(dat[,2:8])
write.csv(correlations, "./correlations.csv")
corrplot.mixed(correlations, order="hclust", tl.col="black")
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
source("read_diab_file.r")
no_of_clusters = 3
dat = read_diab_file()
dat =  filter(dat, Outcome == 1)
filtered_data = dat[,c(2,4)]
cluster_colors <- c("red", "orange" , "green")
run_kmeans <- function(xtimes)
{
min = 0
#for (x in 1:xtimes)
#{
#kmeans_results <- kmeans(filtered_data, no_of_clusters)
#print(x)
#}
kmeans <- lapply(seq_len(xtimes), function(i){
results <- kmeans(filtered_data, 3)
})
return(kmeans)
}
kmeans_all_results = run_kmeans(10)
perf <- sapply(kmeans_all_results, function(d) as.numeric(d["tot.withinss"]))
index <- which.min(perf)
kmeans_results = kmeans_all_results[[index]]
fviz_cluster(kmeans_results, data = filtered_data, iter.max = 10, nstart = 1, algorithm = "Hartigan-Wong", ellipse.type = "norm") #+
c_len = length(kmeans_results$cluster)
print(c_len)
sil <- silhouette(kmeans_results$cluster, dist(filtered_data))
fviz_silhouette(sil)
mydata <- filtered_data
boxplot(dat[,2])
outboxplot(dat[,c("Glucose")])
outboxplot(dat[,"Glucose"])
out <- boxplot(dat[,"Glucose"])
out
outGlucose <- boxplot(dat)
outGlucose
outGlucose1 <- boxplot(dat[,"Glucose"])
outGlucose1
outGlucose1 <- boxplot(dat[,"Glucose"])
outInsulin
outInsulin <- boxplot(dat[,"Insulin"])
outInsulin
outGlucose
outInsulin
outGlucose <- boxplot(dat)
count(dat[,"Insulin"]==0)
count(dat, "Insulin", "0")
dim(dat)
count(dat, "Insulin", "123")
count(dat, "Insulin", 0)
insdat =  filter(dat, Insulin > 0)
outInsulin <- boxplot(insdat[,"Insulin"])
insdat
insdat =  filter(dat, Insulin > 0 && Insulin < 400)
outInsulin <- boxplot(insdat[,"Insulin"])
insdat
insdat =  filter(dat, Insulin > 0 & Insulin < 400)
outInsulin <- boxplot(insdat[,"Insulin"])
insdat =  filter(dat, Insulin > 0 & Insulin < 100)
outInsulin <- boxplot(insdat[,"Insulin"])
#insdat =  filter(dat, Insulin > 0 & Insulin < 100)
outInsulin <- boxplot(insdat[,"Insulin"])
#insdat =  filter(dat, Insulin > 0 & Insulin < 100)
outInsulin <- boxplot(dat[,"Insulin"])
hist(dat[,"Insulin"])
outInsulin
outGlucose1 <- boxplot(dat[,"Glucose"])
hist(dat[,"Glucose"])
valid_dat =  filter(dat, Glucose > 65 )
valid_dat =  filter(dat, Glucose > 65 )
hist(valid_dat)
hist(valid_dat[,"Glucose"])
count(valid_dat)
count(dat)
hist(dat[,"Glucose"])
valid_dat =  filter(dat, Glucose > 80 )
count(valid_dat)
hist(valid_dat[,"Glucose"])
valid_dat =  filter(dat, Glucose > 70 )
count(valid_dat)
min(dat[,"Glucose"])
hist(dat[,"Insulin"])
count(dat, "Insulin", 0)
valid_dat =  filter(dat, Glucose > 70 )
count(valid_dat)
hist(valid_dat[,"Glucose"])
hist(valid_dat[,"Insulin"])
correlations <= cor(valid_dat[,2:8])
hist(valid_dat[,"Insulin"])
corrplot.mixed(correlations, order="hclust", tl.col="black")
correlations1 <= cor(valid_dat[,2:8])
hist(valid_dat[,"Insulin"])
corrplot.mixed(correlations1, order="hclust", tl.col="black")
correlations1 <- cor(valid_dat[,2:8])
corrplot.mixed(correlations1, order="hclust", tl.col="black")
dat3 = filter(valid_dat, Insulin > 0 )
dat3
corrplot.mixed(cor(dat3), order="hclust", tl.col="black")
corrplot.mixed(cor(dat3[,2:8]), order="hclust", tl.col="black")
hist(dat[,"Age"])
corrplot.mixed(cor(dat3[,2:8]), order="hclust", tl.col="black")
min(dat[,"Age"])
max(dat[,"Age"])
hist(dat[,"Age"])
min(dat3[,"Age"])
max(dat3[,"Age"])
dat3
summary(dat3)
#define Min-Max normalization function
min_max_norm <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
#apply Min-Max normalization to first four columns in iris dataset
dat_norm <- as.data.frame(lapply(dat[1:8], min_max_norm))
boxplot(dat_norm
boxplot(dat_norm)
boxplot(dat_norm)
#apply Min-Max normalization to first four columns in iris dataset
dat_norm <- as.data.frame(lapply(dat[1:8], min_max_norm))
dat_norm1 = normalize(dat, method = "standardize", range = c(5), margin = 1L, on.constant = "quiet")
boxplot(dat_norm,dat_norm1)
#apply Min-Max normalization to first four columns in iris dataset
dat_norm <- as.data.frame(lapply(dat[1:8], min_max_norm))
dat_norm1 = normalize(dat, method = "standardize", range = c(5), margin = 1L, on.constant = "quiet")
install.packages("BBmisc")
#apply Min-Max normalization to first four columns in iris dataset
dat_norm <- as.data.frame(lapply(dat[1:8], min_max_norm))
dat_norm1 = normalize(dat, method = "standardize", range = c(5), margin = 1L, on.constant = "quiet")
boxplot(dat_norm,valid_dat)
boxplot(dat_norm)
boxplot(valid_dat)
dat_norm
corrplot.mixed(cor(dat_norm[,2:8]), order="hclust", tl.col="black")
corrplot.mixed(correlations1, order="hclust", tl.col="black")
corrplot.mixed(cor(dat3[,2:8]), order="hclust", tl.col="black")
library(corrplot)
library(tidyverse)
source("read_diab_file.r")
dat = read_diab_file()
#define Min-Max normalization function
min_max_norm <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
#apply Min-Max normalization to first four columns in iris dataset
dat_norm <- as.data.frame(lapply(dat[1:8], min_max_norm))
boxplot(dat_norm)
boxplot(valid_dat)
corrplot.mixed(cor(dat_norm[,2:8]), order="hclust", tl.col="black")
library(corrplot)
library(tidyverse)
source("read_diab_file.r")
dat = read_diab_file()
#define Min-Max normalization function
min_max_norm <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
#apply Min-Max normalization to first four columns in iris dataset
dat_norm <- as.data.frame(lapply(dat[2:7], min_max_norm))
boxplot(dat_norm)
boxplot(valid_dat)
corrplot.mixed(cor(dat_norm[,2:8]), order="hclust", tl.col="black")
corrplot.mixed(cor(dat_norm[,2:7]), order="hclust", tl.col="black")
#apply Min-Max normalization to first four columns in iris dataset
dat_norm <- as.data.frame(lapply(dat[2:7], min_max_norm))
boxplot(dat_norm)
boxplot(valid_dat)
corrplot.mixed(cor(dat_norm[,2:7]), order="hclust", tl.col="black")
#apply Min-Max normalization to first four columns in iris dataset
dat_norm <- as.data.frame(lapply(dat[2:6], min_max_norm))
boxplot(dat_norm)
corrplot.mixed(cor(dat_norm), order="hclust", tl.col="black")
dat_norm
library(corrplot)
library(tidyverse)
source("read_diab_file.r")
library(BBmisc)
dat = read_diab_file()
display(dat.info(),dat.head())
correlations = cor(dat[,2:8])
write.csv(correlations, "./correlations.csv")
corrplot.mixed(correlations, order="hclust", tl.col="black")
outGlucose <- boxplot(dat[,])
count(dat)
outGlucose1 <- boxplot(dat[,"Glucose"])
hist(dat[,"Glucose"])
outInsulin <- boxplot(dat[,"Insulin"])
hist(dat[,"Insulin"])
count(dat, "Insulin", 0)
valid_dat =  filter(dat, Glucose > 70 )
count(valid_dat)
hist(valid_dat[,"Glucose"])
correlations1 <- cor(valid_dat[,2:8])
corrplot.mixed(correlations1, order="hclust", tl.col="black")
dat3 = filter(valid_dat, Insulin > 0 )
corrplot.mixed(cor(dat3[,2:8]), order="hclust", tl.col="black")
min(dat3[,"Age"])
max(dat3[,"Age"])
hist(dat[,"Age"])
summary(dat3)
count(dat)
outGlucose1 <- boxplot(dat[,"Glucose"])
hist(dat[,"Glucose"])
outInsulin <- boxplot(dat[,"Insulin"])
hist(dat[,"Insulin"])
count(dat, "Insulin", 0)
valid_dat =  filter(dat, Glucose > 70 )
count(valid_dat)
hist(valid_dat[,"Glucose"])
correlations1 <- cor(valid_dat[,2:8])
corrplot.mixed(correlations1, order="hclust", tl.col="black")
where(dat, Insuline == 0)
corrplot.mixed(correlations, order="hclust", tl.col="black")
correlations = cor(dat[,2:8])
write.csv(correlations, "./correlations.csv")
corrplot.mixed(correlations, order="hclust", tl.col="black")
valid_dat =  filter(dat, Glucose > 70 )
count(valid_dat)
hist(valid_dat[,"Glucose"])
correlations1 <- cor(valid_dat[,2:8])
corrplot.mixed(correlations1, order="hclust", tl.col="black")
dat3 = filter(valid_dat, Insulin > 0 )
corrplot.mixed(correlations, order="hclust", tl.col="black")
hist(dat)
boxplot(dat[,])
boxplot(dat[,2:7])
hist(dat[,"Insulin"])
